version: "3.9"

networks:
  tom:
    driver: bridge

services:
  tom:
    build:
      context: .
      dockerfile: ./dockerfiles/tom/Dockerfile
    container_name: tom
    restart: always
    ports:
      - "443:443"
    volumes:
      - /data/:/data/
    networks:
      - tom

  mickael:
    build:
      context: .
      dockerfile: ./dockerfiles/agent/Dockerfile
    container_name: mickael
    restart: always
    environment:
      - TOM_USERNAME=mickael
    networks:
      - tom
    volumes:
      - /data/:/data/

  nina:
    build:
      context: .
      dockerfile: ./dockerfiles/agent/Dockerfile
    container_name: nina
    restart: always
    environment:
      - TOM_USERNAME=nina
    networks:
      - tom
    volumes:
      - /data/:/data/

  ambre:
    build:
      context: .
      dockerfile: ./dockerfiles/agent/Dockerfile
    container_name: ambre
    restart: always
    environment:
      - TOM_USERNAME=ambre
    networks:
      - tom
    volumes:
      - /data/:/data/

  charlotte:
    build:
      context: .
      dockerfile: ./dockerfiles/agent/Dockerfile
    container_name: charlotte
    restart: always
    environment:
      - TOM_USERNAME=charlotte
    networks:
      - tom
    volumes:
      - /data/:/data/


### MODULES MCP ###
  # Global
  weather:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/weather/Dockerfile
    container_name: weather
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
    networks:
      - tom
    volumes:
      - /data/mcp/weather/:/data/

  idfm:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/idfm/Dockerfile
    container_name: idfm
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
    networks:
      - tom
    volumes:
      - /data/mcp/idfm/:/data/

  homeconnect:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/homeconnect/Dockerfile
    container_name: homeconnect
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
    networks:
      - tom
    volumes:
      - /data/mcp/homeconnect/:/data/

  switchparentalcontrol:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/switchparentalcontrol/Dockerfile
    container_name: switchparentalcontrol
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
    networks:
      - tom
    volumes:
      - /data/mcp/switchparentalcontrol/:/data/

  kwyk:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/kwyk/Dockerfile
    container_name: kwyk
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
    networks:
      - tom
    volumes:
      - /data/mcp/kwyk/:/data/
  
  contacts:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/contacts/Dockerfile
    container_name: contacts
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
    networks:
      - tom
    volumes:
      - /data/mcp/contacts/:/data/
  

  # Personal
 
  anki-mickael:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/anki/Dockerfile
    container_name: anki-mickael
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
      - ANKI_URL=http://server.taila2494.ts.net:8765
      - ANKI_PROFILE=mickael
    networks:
      - tom
    volumes:
      - /data/mcp/anki/:/data/

  behavior-mickael:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/behavior/Dockerfile
    container_name: behavior-mickael
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
      - TOM_USER=mickael
    networks:
      - tom
    volumes:
      - /data/mcp/behavior/:/data/

  youtube-mickael:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/youtube/Dockerfile
    container_name: youtube-mickael
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
      - TOM_USER=mickael
    networks:
      - tom
    volumes:
      - /data/mcp/youtube/:/data/

  news-mickael:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/news/Dockerfile
    container_name: news-mickael
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
      - TOM_USER=mickael
    networks:
      - tom
    volumes:
      - /data/mcp/news/:/data/

  calendar-mickael:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/calendar/Dockerfile
    container_name: calendar-mickael
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
      - TOM_USER=mickael
    networks:
      - tom
    volumes:
      - /data/mcp/calendar/:/data/

  calendar-nina:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/calendar/Dockerfile
    container_name: calendar-nina
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
      - TOM_USER=nina
    networks:
      - tom
    volumes:
      - /data/mcp/calendar/:/data/

  calendar-ambre:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/calendar/Dockerfile
    container_name: calendar-ambre
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
      - TOM_USER=ambre
    networks:
      - tom
    volumes:
      - /data/mcp/calendar/:/data/

  todo-mickael:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/todo/Dockerfile
    container_name: todo-mickael
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
      - TOM_USER=mickael
    networks:
      - tom
    volumes:
      - /data/mcp/todo/:/data/

  todo-nina:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/todo/Dockerfile
    container_name: todo-nina
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
      - TOM_USER=nina
    networks:
      - tom
    volumes:
      - /data/mcp/todo/:/data/

  todo-ambre:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/todo/Dockerfile
    container_name: todo-ambre
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
      - TOM_USER=ambre
    networks:
      - tom
    volumes:
      - /data/mcp/todo/:/data/

  todo-charlotte:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/todo/Dockerfile
    container_name: todo-charlotte
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
      - TOM_USER=charlotte
    networks:
      - tom
    volumes:
      - /data/mcp/todo/:/data/

  gpodder-mickael:
    build:
      context: .
      dockerfile: ./dockerfiles/mcp/gpodder/Dockerfile
    container_name: gpodder-mickael
    restart: always
    environment:
      - TOM_LOG_LEVEL=DEBUG
      - TOM_USER=mickael
    networks:
      - tom
    volumes:
      - /data/mcp/gpodder/:/data/

